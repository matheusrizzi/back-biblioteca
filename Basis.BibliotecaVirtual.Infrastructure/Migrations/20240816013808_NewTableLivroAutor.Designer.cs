// <auto-generated />
using Basis.BibliotecaVirtual.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Basis.BibliotecaVirtual.Infrastructure.Migrations
{
    [DbContext(typeof(BibliotecaDbContext))]
    [Migration("20240816013808_NewTableLivroAutor")]
    partial class NewTableLivroAutor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Basis.BibliotecaVirtual.Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAs"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CodAs");

                    b.ToTable("Assunto");
                });

            modelBuilder.Entity("Basis.BibliotecaVirtual.Domain.Entities.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAu"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CodAu");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Basis.BibliotecaVirtual.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Codl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codl"));

                    b.Property<int>("AnoPublicacao")
                        .HasColumnType("int");

                    b.Property<int>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Codl");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("Basis.BibliotecaVirtual.Domain.Entities.Livro_Autor", b =>
                {
                    b.Property<int>("LivroCodL")
                        .HasColumnType("int");

                    b.Property<int>("AutorCodAu")
                        .HasColumnType("int");

                    b.HasKey("LivroCodL", "AutorCodAu");

                    b.HasIndex("AutorCodAu");

                    b.ToTable("Livro_Autor");
                });

            modelBuilder.Entity("Basis.BibliotecaVirtual.Domain.Entities.Livro_Autor", b =>
                {
                    b.HasOne("Basis.BibliotecaVirtual.Domain.Entities.Autor", "Autor")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("AutorCodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Basis.BibliotecaVirtual.Domain.Entities.Livro", "Livro")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("LivroCodL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Basis.BibliotecaVirtual.Domain.Entities.Autor", b =>
                {
                    b.Navigation("LivrosAutores");
                });

            modelBuilder.Entity("Basis.BibliotecaVirtual.Domain.Entities.Livro", b =>
                {
                    b.Navigation("LivrosAutores");
                });
#pragma warning restore 612, 618
        }
    }
}
